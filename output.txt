Int -> type yytext = Int 
IDtoken -> iddec yytext = v1 
iddec -> idlist yytext = ; 
vardec -> type idlist SEMICOLON yytext = ; 
vardec -> dec yytext = ; 
declist -> dec yytext = ; 
IDtoken -> lvalue yytext = v1 
INTtoken -> exp yytext = #0 
lvalue ASSIGNMENT exp -> stmt yytext = #0 
stmt -> stmtlist yytext = ; 
IDtoken -> lvalue yytext = o0perator 
lvalue -> exp yytext = o0perator 
INTtoken -> caseValue yytext = #0 
IDtoken -> lvalue yytext = v1 
INTtoken -> exp yytext = #1 
lvalue ASSIGNMENT exp -> stmt yytext = #1 
stmt -> block yytext = ; 
caseValue COLON block SEMICOLON -> caseelement yytext = ; 
INTtoken -> caseValue yytext = #1 
IDtoken -> lvalue yytext = v1 
INTtoken -> exp yytext = #2 
lvalue ASSIGNMENT exp -> stmt yytext = #2 
stmt -> block yytext = ; 
caseelement caseValue COLON block SEMICOLON -> caseelement yytext = ; 
INTtoken -> caseValue yytext = #2 
IDtoken -> lvalue yytext = v1 
INTtoken -> exp yytext = #3 
lvalue ASSIGNMENT exp -> stmt yytext = #3 
stmt -> block yytext = ; 
caseelement caseValue COLON block SEMICOLON -> caseelement yytext = ; 
INTtoken -> caseValue yytext = #3 
IDtoken -> lvalue yytext = v1 
INTtoken -> exp yytext = #4 
lvalue ASSIGNMENT exp -> stmt yytext = #4 
stmt -> block yytext = ; 
caseelement caseValue COLON block SEMICOLON -> caseelement yytext = ; 
INTtoken -> caseValue yytext = #4 
IDtoken -> lvalue yytext = v1 
INTtoken -> exp yytext = #5 
lvalue ASSIGNMENT exp -> stmt yytext = #5 
stmt -> block yytext = ; 
caseelement caseValue COLON block SEMICOLON -> caseelement yytext = ; 
Case exp caseelement End -> stmt yytext = End 
stmtlist SEMICOLON stmt -> stmtlist yytext = End 
Begin stmtlist End -> block yytext = End 
Program IDtoken SEMICOLON declist block SEMICOLON -> program yytext = ; 
