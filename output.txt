Real -> type yytext = Real 
IDtoken -> iddec yytext = n1 
iddec -> idlist yytext = , 
IDtoken -> iddec yytext = n2 
idlist -> idlist COMMA iddec yytext = , 
IDtoken -> iddec yytext = n3 
idlist -> idlist COMMA iddec yytext = ; 
vardec -> type idlist SEMICOLON yytext = ; 
vardec -> dec yytext = ; 
declist -> dec yytext = ; 
IDtoken -> lvalue yytext = n1 
INTtoken -> exp yytext = #20 
INTtoken -> exp yytext = #10 
INTtoken -> exp yytext = #2 
exp DIV exp -> exp yytext = #2 
exp SUB exp -> exp yytext = ; 
lvalue ASSIGNMENT exp -> stmt yytext = #2 
stmt -> stmtlist yytext = ; 
IDtoken -> lvalue yytext = n2 
IDtoken -> lvalue yytext = n1 
lvalue -> exp yytext = n1 
INTtoken -> exp yytext = #3 
INTtoken -> exp yytext = #2 
exp ADD exp -> exp yytext = ) 
LEFTP exp RIGHTP -> exp yytext = ) 
exp DIV exp -> exp yytext = ) 
lvalue ASSIGNMENT exp -> stmt yytext = #2 
stmtlist SEMICOLON stmt -> stmtlist yytext = ; 
IDtoken -> lvalue yytext = n3 
IDtoken -> lvalue yytext = n1 
lvalue -> exp yytext = n1 
IDtoken -> lvalue yytext = n2 
lvalue -> exp yytext = n2 
exp MUL exp -> exp yytext = - 
INTtoken -> exp yytext = #10 
exp SUB exp -> exp yytext = ; 
lvalue ASSIGNMENT exp -> stmt yytext = #10 
stmtlist SEMICOLON stmt -> stmtlist yytext = ; 
IDtoken -> lvalue yytext = n1 
lvalue -> exp yytext = n1 
INTtoken -> exp yytext = #2 
exp GT exp -> exp yytext = ) 
LEFTP exp RIGHTP -> exp yytext = ) 
IDtoken -> lvalue yytext = n2 
lvalue -> exp yytext = n2 
INTtoken -> exp yytext = #0 
exp GT exp -> exp yytext = ) 
LEFTP exp RIGHTP -> exp yytext = ) 
IDtoken -> lvalue yytext = n3 
IDtoken -> lvalue yytext = n3 
lvalue -> exp yytext = n3 
INTtoken -> exp yytext = #1 
exp ADD exp -> exp yytext = ; 
lvalue ASSIGNMENT exp -> stmt yytext = #1 
stmt -> stmtlist yytext = ; 
IDtoken -> lvalue yytext = n2 
IDtoken -> lvalue yytext = n2 
lvalue -> exp yytext = n2 
INTtoken -> exp yytext = #1 
exp SUB exp -> exp yytext = End 
lvalue ASSIGNMENT exp -> stmt yytext = #1 
stmtlist SEMICOLON stmt -> stmtlist yytext = End 
Begin stmtlist End -> block yytext = End 
While exp Do block -> stmt yytext = End 
stmt -> stmtlist yytext = End 
Begin stmtlist End -> block yytext = End 
If exp Then block -> stmt yytext = End 
stmtlist SEMICOLON stmt -> stmtlist yytext = End 
Begin stmtlist End -> block yytext = End 
Program IDtoken SEMICOLON declist block SEMICOLON -> program yytext = ; 
