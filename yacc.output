Grammar

    0 $accept: program $end

    1 program: Program IDtoken SEMICOLON declist block SEMICOLON
    2        | Program IDtoken SEMICOLON block SEMICOLON

    3 declist: dec
    4        | declist dec

    5 dec: vardec
    6    | procdec
    7    | funcdec

    8 type: Int
    9     | Real
   10     | Bool

   11 iddec: IDtoken
   12      | IDtoken ASSIGNMENT exp

   13 idlist: iddec
   14       | idlist COMMA iddec

   15 vardec: type idlist SEMICOLON

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken LEFTP paramdecs RIGHTP block SEMICOLON

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP COLON type block SEMICOLON

   20 paramdecs: paramdec
   21          | paramdecs SEMICOLON paramdec

   22 paramdec: type paramlist

   23 paramlist: IDtoken
   24          | paramlist COMMA IDtoken

   25 block: Begin stmtlist End
   26      | stmt

   27 stmtlist: stmt
   28         | stmtlist SEMICOLON stmt

   29 lvalue: IDtoken

   30 caseValue: INTtoken

   31 funcValue: IDtoken

   32 funcCallValue: IDtoken

   33 stmt: lvalue ASSIGNMENT exp
   34     | If exp Then block
   35     | If exp Then block Else block
   36     | While exp Do block
   37     | For lvalue ASSIGNMENT exp To exp Do block
   38     | For lvalue ASSIGNMENT exp Downto exp Do block
   39     | Case exp COLON caseelement End
   40     | Return exp
   41     | exp

   42 exp: exp AndThen exp
   43    | exp OrElse exp
   44    | exp ADD exp
   45    | exp SUB exp
   46    | exp MUL exp
   47    | exp DIV exp
   48    | LEFTP exp RIGHTP
   49    | exp GT exp
   50    | exp GE exp
   51    | exp NE exp
   52    | exp EQ exp
   53    | exp LT exp
   54    | exp LE exp
   55    | INTtoken
   56    | REALtoken
   57    | True
   58    | False
   59    | lvalue
   60    | funcCallValue LEFTP explist RIGHTP

   61 caseelement: caseValue COLON block SEMICOLON
   62            | caseelement caseValue COLON block SEMICOLON

   63 explist: exp
   64        | explist COMMA exp


Terminals, with rules where they appear

$end (0) 0
error (256)
Real (258) 9
Int (259) 8
RIGHTP (260) 16 17 18 19 48 60
LEFTP (261) 16 17 18 19 48 60
SEMICOLON (262) 1 2 15 16 17 18 19 21 28 61 62
ASSIGNMENT (263) 12 33 37 38
COLON (264) 18 19 39 61 62
COMMA (265) 14 24 64
If (266) 34 35
Procedure (267) 16 17
Function (268) 18 19
Begin (269) 25
End (270) 25 39
True (271) 57
False (272) 58
While (273) 36
Do (274) 36 37 38
For (275) 37 38
To (276) 37
Downto (277) 38
IDtoken (278) 1 2 11 12 16 17 23 24 29 31 32
Bool (279) 10
INTtoken (280) 30 55
REALtoken (281) 56
Program (282) 1 2
Case (283) 39
Return (284) 40
Then (285) 34 35
Else (286) 35
OrElse (287) 43
AndThen (288) 42
NE (289) 51
EQ (290) 52
GE (291) 50
LE (292) 54
GT (293) 49
LT (294) 53
SUB (295) 45
ADD (296) 44
DIV (297) 47
MUL (298) 46


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2, on right: 0
declist (46)
    on left: 3 4, on right: 1 4 16 18
dec (47)
    on left: 5 6 7, on right: 3 4
type (48)
    on left: 8 9 10, on right: 15 18 19 22
iddec (49)
    on left: 11 12, on right: 13 14
idlist (50)
    on left: 13 14, on right: 14 15
vardec (51)
    on left: 15, on right: 5
procdec (52)
    on left: 16 17, on right: 6
funcdec (53)
    on left: 18 19, on right: 7
paramdecs (54)
    on left: 20 21, on right: 16 17 18 19 21
paramdec (55)
    on left: 22, on right: 20 21
paramlist (56)
    on left: 23 24, on right: 22 24
block (57)
    on left: 25 26, on right: 1 2 16 17 18 19 34 35 36 37 38 61 62
stmtlist (58)
    on left: 27 28, on right: 25 28
lvalue (59)
    on left: 29, on right: 33 37 38 59
caseValue (60)
    on left: 30, on right: 61 62
funcValue (61)
    on left: 31, on right: 18 19
funcCallValue (62)
    on left: 32, on right: 60
stmt (63)
    on left: 33 34 35 36 37 38 39 40 41, on right: 26 27 28
exp (64)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60, on right: 12 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51 52 53 54 63 64
caseelement (65)
    on left: 61 62, on right: 39 62
explist (66)
    on left: 63 64, on right: 60 64


State 0

    0 $accept: . program $end

    Program  shift, and go to state 1

    program  go to state 2


State 1

    1 program: Program . IDtoken SEMICOLON declist block SEMICOLON
    2        | Program . IDtoken SEMICOLON block SEMICOLON

    IDtoken  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: Program IDtoken . SEMICOLON declist block SEMICOLON
    2        | Program IDtoken . SEMICOLON block SEMICOLON

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: Program IDtoken SEMICOLON . declist block SEMICOLON
    2        | Program IDtoken SEMICOLON . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    declist        go to state 23
    dec            go to state 24
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 29
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 6

    9 type: Real .

    $default  reduce using rule 9 (type)


State 7

    8 type: Int .

    $default  reduce using rule 8 (type)


State 8

   48 exp: LEFTP . exp RIGHTP

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 35


State 9

   34 stmt: If . exp Then block
   35     | If . exp Then block Else block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 36


State 10

   16 procdec: Procedure . IDtoken LEFTP paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure . IDtoken LEFTP paramdecs RIGHTP block SEMICOLON

    IDtoken  shift, and go to state 37


State 11

   18 funcdec: Function . funcValue LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function . funcValue LEFTP paramdecs RIGHTP COLON type block SEMICOLON

    IDtoken  shift, and go to state 38

    funcValue  go to state 39


State 12

   25 block: Begin . stmtlist End

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    stmtlist       go to state 40
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 41
    exp            go to state 33


State 13

   57 exp: True .

    $default  reduce using rule 57 (exp)


State 14

   58 exp: False .

    $default  reduce using rule 58 (exp)


State 15

   36 stmt: While . exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 42


State 16

   37 stmt: For . lvalue ASSIGNMENT exp To exp Do block
   38     | For . lvalue ASSIGNMENT exp Downto exp Do block

    IDtoken  shift, and go to state 43

    lvalue  go to state 44


State 17

   29 lvalue: IDtoken .
   32 funcCallValue: IDtoken .

    LEFTP     reduce using rule 32 (funcCallValue)
    $default  reduce using rule 29 (lvalue)


State 18

   10 type: Bool .

    $default  reduce using rule 10 (type)


State 19

   55 exp: INTtoken .

    $default  reduce using rule 55 (exp)


State 20

   56 exp: REALtoken .

    $default  reduce using rule 56 (exp)


State 21

   39 stmt: Case . exp COLON caseelement End

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 45


State 22

   40 stmt: Return . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 46


State 23

    1 program: Program IDtoken SEMICOLON declist . block SEMICOLON
    4 declist: declist . dec

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    dec            go to state 47
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 48
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 24

    3 declist: dec .

    $default  reduce using rule 3 (declist)


State 25

   15 vardec: type . idlist SEMICOLON

    IDtoken  shift, and go to state 49

    iddec   go to state 50
    idlist  go to state 51


State 26

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 27

    6 dec: procdec .

    $default  reduce using rule 6 (dec)


State 28

    7 dec: funcdec .

    $default  reduce using rule 7 (dec)


State 29

    2 program: Program IDtoken SEMICOLON block . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 30

   33 stmt: lvalue . ASSIGNMENT exp
   59 exp: lvalue .

    ASSIGNMENT  shift, and go to state 53

    $default  reduce using rule 59 (exp)


State 31

   60 exp: funcCallValue . LEFTP explist RIGHTP

    LEFTP  shift, and go to state 54


State 32

   26 block: stmt .

    $default  reduce using rule 26 (block)


State 33

   41 stmt: exp .
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 41 (stmt)


State 34

   59 exp: lvalue .

    $default  reduce using rule 59 (exp)


State 35

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   48    | LEFTP exp . RIGHTP
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    RIGHTP   shift, and go to state 67
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 36

   34 stmt: If exp . Then block
   35     | If exp . Then block Else block
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    Then     shift, and go to state 68
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 37

   16 procdec: Procedure IDtoken . LEFTP paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken . LEFTP paramdecs RIGHTP block SEMICOLON

    LEFTP  shift, and go to state 69


State 38

   31 funcValue: IDtoken .

    $default  reduce using rule 31 (funcValue)


State 39

   18 funcdec: Function funcValue . LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue . LEFTP paramdecs RIGHTP COLON type block SEMICOLON

    LEFTP  shift, and go to state 70


State 40

   25 block: Begin stmtlist . End
   28 stmtlist: stmtlist . SEMICOLON stmt

    SEMICOLON  shift, and go to state 71
    End        shift, and go to state 72


State 41

   27 stmtlist: stmt .

    $default  reduce using rule 27 (stmtlist)


State 42

   36 stmt: While exp . Do block
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    Do       shift, and go to state 73
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 43

   29 lvalue: IDtoken .

    $default  reduce using rule 29 (lvalue)


State 44

   37 stmt: For lvalue . ASSIGNMENT exp To exp Do block
   38     | For lvalue . ASSIGNMENT exp Downto exp Do block

    ASSIGNMENT  shift, and go to state 74


State 45

   39 stmt: Case exp . COLON caseelement End
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    COLON    shift, and go to state 75
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 46

   40 stmt: Return exp .
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 40 (stmt)


State 47

    4 declist: declist dec .

    $default  reduce using rule 4 (declist)


State 48

    1 program: Program IDtoken SEMICOLON declist block . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 49

   11 iddec: IDtoken .
   12      | IDtoken . ASSIGNMENT exp

    ASSIGNMENT  shift, and go to state 77

    $default  reduce using rule 11 (iddec)


State 50

   13 idlist: iddec .

    $default  reduce using rule 13 (idlist)


State 51

   14 idlist: idlist . COMMA iddec
   15 vardec: type idlist . SEMICOLON

    SEMICOLON  shift, and go to state 78
    COMMA      shift, and go to state 79


State 52

    2 program: Program IDtoken SEMICOLON block SEMICOLON .

    $default  reduce using rule 2 (program)


State 53

   33 stmt: lvalue ASSIGNMENT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 80


State 54

   60 exp: funcCallValue LEFTP . explist RIGHTP

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 81
    explist        go to state 82


State 55

   43 exp: exp OrElse . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 83


State 56

   42 exp: exp AndThen . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 84


State 57

   51 exp: exp NE . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 85


State 58

   52 exp: exp EQ . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 86


State 59

   50 exp: exp GE . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 87


State 60

   54 exp: exp LE . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 88


State 61

   49 exp: exp GT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 89


State 62

   53 exp: exp LT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 90


State 63

   45 exp: exp SUB . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 91


State 64

   44 exp: exp ADD . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 92


State 65

   47 exp: exp DIV . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 93


State 66

   46 exp: exp MUL . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 94


State 67

   48 exp: LEFTP exp RIGHTP .

    $default  reduce using rule 48 (exp)


State 68

   34 stmt: If exp Then . block
   35     | If exp Then . block Else block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 95
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 69

   16 procdec: Procedure IDtoken LEFTP . paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken LEFTP . paramdecs RIGHTP block SEMICOLON

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type       go to state 96
    paramdecs  go to state 97
    paramdec   go to state 98


State 70

   18 funcdec: Function funcValue LEFTP . paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP . paramdecs RIGHTP COLON type block SEMICOLON

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type       go to state 96
    paramdecs  go to state 99
    paramdec   go to state 98


State 71

   28 stmtlist: stmtlist SEMICOLON . stmt

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 100
    exp            go to state 33


State 72

   25 block: Begin stmtlist End .

    $default  reduce using rule 25 (block)


State 73

   36 stmt: While exp Do . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 101
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 74

   37 stmt: For lvalue ASSIGNMENT . exp To exp Do block
   38     | For lvalue ASSIGNMENT . exp Downto exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 102


State 75

   39 stmt: Case exp COLON . caseelement End

    INTtoken  shift, and go to state 103

    caseValue    go to state 104
    caseelement  go to state 105


State 76

    1 program: Program IDtoken SEMICOLON declist block SEMICOLON .

    $default  reduce using rule 1 (program)


State 77

   12 iddec: IDtoken ASSIGNMENT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 106


State 78

   15 vardec: type idlist SEMICOLON .

    $default  reduce using rule 15 (vardec)


State 79

   14 idlist: idlist COMMA . iddec

    IDtoken  shift, and go to state 49

    iddec  go to state 107


State 80

   33 stmt: lvalue ASSIGNMENT exp .
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 33 (stmt)


State 81

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp
   63 explist: exp .

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 63 (explist)


State 82

   60 exp: funcCallValue LEFTP explist . RIGHTP
   64 explist: explist . COMMA exp

    RIGHTP  shift, and go to state 108
    COMMA   shift, and go to state 109


State 83

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   43    | exp OrElse exp .
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 43 (exp)


State 84

   42 exp: exp . AndThen exp
   42    | exp AndThen exp .
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    NE   shift, and go to state 57
    EQ   shift, and go to state 58
    GE   shift, and go to state 59
    LE   shift, and go to state 60
    GT   shift, and go to state 61
    LT   shift, and go to state 62
    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 42 (exp)


State 85

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   51    | exp NE exp .
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 51 (exp)


State 86

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   52    | exp EQ exp .
   53    | exp . LT exp
   54    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 52 (exp)


State 87

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   50    | exp GE exp .
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 50 (exp)


State 88

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp
   54    | exp LE exp .

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 54 (exp)


State 89

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   49    | exp GT exp .
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 49 (exp)


State 90

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   53    | exp LT exp .
   54    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 53 (exp)


State 91

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   45    | exp SUB exp .
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 45 (exp)


State 92

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   44    | exp ADD exp .
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 44 (exp)


State 93

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   47    | exp DIV exp .
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    $default  reduce using rule 47 (exp)


State 94

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   46    | exp MUL exp .
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    $default  reduce using rule 46 (exp)


State 95

   34 stmt: If exp Then block .
   35     | If exp Then block . Else block

    Else  shift, and go to state 110

    $default  reduce using rule 34 (stmt)


State 96

   22 paramdec: type . paramlist

    IDtoken  shift, and go to state 111

    paramlist  go to state 112


State 97

   16 procdec: Procedure IDtoken LEFTP paramdecs . RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken LEFTP paramdecs . RIGHTP block SEMICOLON
   21 paramdecs: paramdecs . SEMICOLON paramdec

    RIGHTP     shift, and go to state 113
    SEMICOLON  shift, and go to state 114


State 98

   20 paramdecs: paramdec .

    $default  reduce using rule 20 (paramdecs)


State 99

   18 funcdec: Function funcValue LEFTP paramdecs . RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs . RIGHTP COLON type block SEMICOLON
   21 paramdecs: paramdecs . SEMICOLON paramdec

    RIGHTP     shift, and go to state 115
    SEMICOLON  shift, and go to state 114


State 100

   28 stmtlist: stmtlist SEMICOLON stmt .

    $default  reduce using rule 28 (stmtlist)


State 101

   36 stmt: While exp Do block .

    $default  reduce using rule 36 (stmt)


State 102

   37 stmt: For lvalue ASSIGNMENT exp . To exp Do block
   38     | For lvalue ASSIGNMENT exp . Downto exp Do block
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    To       shift, and go to state 116
    Downto   shift, and go to state 117
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 103

   30 caseValue: INTtoken .

    $default  reduce using rule 30 (caseValue)


State 104

   61 caseelement: caseValue . COLON block SEMICOLON

    COLON  shift, and go to state 118


State 105

   39 stmt: Case exp COLON caseelement . End
   62 caseelement: caseelement . caseValue COLON block SEMICOLON

    End       shift, and go to state 119
    INTtoken  shift, and go to state 103

    caseValue  go to state 120


State 106

   12 iddec: IDtoken ASSIGNMENT exp .
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 12 (iddec)


State 107

   14 idlist: idlist COMMA iddec .

    $default  reduce using rule 14 (idlist)


State 108

   60 exp: funcCallValue LEFTP explist RIGHTP .

    $default  reduce using rule 60 (exp)


State 109

   64 explist: explist COMMA . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 121


State 110

   35 stmt: If exp Then block Else . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 122
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 111

   23 paramlist: IDtoken .

    $default  reduce using rule 23 (paramlist)


State 112

   22 paramdec: type paramlist .
   24 paramlist: paramlist . COMMA IDtoken

    COMMA  shift, and go to state 123

    $default  reduce using rule 22 (paramdec)


State 113

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP . declist block SEMICOLON
   17        | Procedure IDtoken LEFTP paramdecs RIGHTP . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    declist        go to state 124
    dec            go to state 24
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 125
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 114

   21 paramdecs: paramdecs SEMICOLON . paramdec

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type      go to state 96
    paramdec  go to state 126


State 115

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP . COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP . COLON type block SEMICOLON

    COLON  shift, and go to state 127


State 116

   37 stmt: For lvalue ASSIGNMENT exp To . exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 128


State 117

   38 stmt: For lvalue ASSIGNMENT exp Downto . exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 129


State 118

   61 caseelement: caseValue COLON . block SEMICOLON

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 130
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 119

   39 stmt: Case exp COLON caseelement End .

    $default  reduce using rule 39 (stmt)


State 120

   62 caseelement: caseelement caseValue . COLON block SEMICOLON

    COLON  shift, and go to state 131


State 121

   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp
   64 explist: explist COMMA exp .

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 64 (explist)


State 122

   35 stmt: If exp Then block Else block .

    $default  reduce using rule 35 (stmt)


State 123

   24 paramlist: paramlist COMMA . IDtoken

    IDtoken  shift, and go to state 132


State 124

    4 declist: declist . dec
   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    dec            go to state 47
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 133
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 125

   17 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP block . SEMICOLON

    SEMICOLON  shift, and go to state 134


State 126

   21 paramdecs: paramdecs SEMICOLON paramdec .

    $default  reduce using rule 21 (paramdecs)


State 127

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON . type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP COLON . type block SEMICOLON

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type  go to state 135


State 128

   37 stmt: For lvalue ASSIGNMENT exp To exp . Do block
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    Do       shift, and go to state 136
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 129

   38 stmt: For lvalue ASSIGNMENT exp Downto exp . Do block
   42 exp: exp . AndThen exp
   43    | exp . OrElse exp
   44    | exp . ADD exp
   45    | exp . SUB exp
   46    | exp . MUL exp
   47    | exp . DIV exp
   49    | exp . GT exp
   50    | exp . GE exp
   51    | exp . NE exp
   52    | exp . EQ exp
   53    | exp . LT exp
   54    | exp . LE exp

    Do       shift, and go to state 137
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 130

   61 caseelement: caseValue COLON block . SEMICOLON

    SEMICOLON  shift, and go to state 138


State 131

   62 caseelement: caseelement caseValue COLON . block SEMICOLON

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 139
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 132

   24 paramlist: paramlist COMMA IDtoken .

    $default  reduce using rule 24 (paramlist)


State 133

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist block . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 134

   17 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP block SEMICOLON .

    $default  reduce using rule 17 (procdec)


State 135

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type . declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP COLON type . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    declist        go to state 141
    dec            go to state 24
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 142
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 136

   37 stmt: For lvalue ASSIGNMENT exp To exp Do . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 143
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 137

   38 stmt: For lvalue ASSIGNMENT exp Downto exp Do . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 144
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 138

   61 caseelement: caseValue COLON block SEMICOLON .

    $default  reduce using rule 61 (caseelement)


State 139

   62 caseelement: caseelement caseValue COLON block . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 140

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist block SEMICOLON .

    $default  reduce using rule 16 (procdec)


State 141

    4 declist: declist . dec
   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    dec            go to state 47
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 146
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 142

   19 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type block . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 143

   37 stmt: For lvalue ASSIGNMENT exp To exp Do block .

    $default  reduce using rule 37 (stmt)


State 144

   38 stmt: For lvalue ASSIGNMENT exp Downto exp Do block .

    $default  reduce using rule 38 (stmt)


State 145

   62 caseelement: caseelement caseValue COLON block SEMICOLON .

    $default  reduce using rule 62 (caseelement)


State 146

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist block . SEMICOLON

    SEMICOLON  shift, and go to state 148


State 147

   19 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type block SEMICOLON .

    $default  reduce using rule 19 (funcdec)


State 148

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON .

    $default  reduce using rule 18 (funcdec)
