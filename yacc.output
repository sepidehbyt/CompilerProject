Grammar

    0 $accept: program $end

    1 program: Program IDtoken SEMICOLON declist block SEMICOLON
    2        | Program IDtoken SEMICOLON block SEMICOLON

    3 declist: dec
    4        | declist dec

    5 dec: vardec
    6    | procdec
    7    | funcdec

    8 type: Int
    9     | Real
   10     | Bool

   11 iddec: IDtoken
   12      | IDtoken ASSIGNMENT exp

   13 idlist: iddec
   14       | idlist COMMA iddec

   15 vardec: type idlist SEMICOLON

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken LEFTP paramdecs RIGHTP block SEMICOLON

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP COLON type block SEMICOLON

   20 paramdecs: paramdec
   21          | paramdecs SEMICOLON paramdec

   22 paramdec: type paramlist

   23 paramlist: IDtoken
   24          | paramlist COMMA IDtoken

   25 block: Begin stmtlist End
   26      | stmt

   27 stmtlist: stmt
   28         | stmtlist SEMICOLON stmt

   29 lvalue: IDtoken

   30 funcValue: IDtoken

   31 funcCallValue: IDtoken

   32 stmt: lvalue ASSIGNMENT exp
   33     | If exp Then block
   34     | If exp Then block Else block
   35     | While exp Do block
   36     | For lvalue ASSIGNMENT exp To exp Do block
   37     | For lvalue ASSIGNMENT exp Downto exp Do block
   38     | Case exp caseelement End
   39     | Return exp
   40     | exp

   41 exp: exp AndThen exp
   42    | exp OrElse exp
   43    | exp ADD exp
   44    | exp SUB exp
   45    | exp MUL exp
   46    | exp DIV exp
   47    | LEFTP exp RIGHTP
   48    | exp GT exp
   49    | exp GE exp
   50    | exp NE exp
   51    | exp EQ exp
   52    | exp LT exp
   53    | exp LE exp
   54    | INTtoken
   55    | REALtoken
   56    | True
   57    | False
   58    | lvalue
   59    | funcCallValue LEFTP explist RIGHTP

   60 caseelement: INTtoken COLON block SEMICOLON
   61            | caseelement INTtoken COLON block SEMICOLON

   62 explist: exp
   63        | explist COMMA exp


Terminals, with rules where they appear

$end (0) 0
error (256)
Real (258) 9
Int (259) 8
RIGHTP (260) 16 17 18 19 47 59
LEFTP (261) 16 17 18 19 47 59
SEMICOLON (262) 1 2 15 16 17 18 19 21 28 60 61
ASSIGNMENT (263) 12 32 36 37
COLON (264) 18 19 60 61
COMMA (265) 14 24 63
If (266) 33 34
Procedure (267) 16 17
Function (268) 18 19
Begin (269) 25
End (270) 25 38
True (271) 56
False (272) 57
While (273) 35
Do (274) 35 36 37
For (275) 36 37
To (276) 36
Downto (277) 37
IDtoken (278) 1 2 11 12 16 17 23 24 29 30 31
Bool (279) 10
INTtoken (280) 54 60 61
REALtoken (281) 55
Program (282) 1 2
Case (283) 38
Return (284) 39
Then (285) 33 34
Else (286) 34
OrElse (287) 42
AndThen (288) 41
NE (289) 50
EQ (290) 51
GE (291) 49
LE (292) 53
GT (293) 48
LT (294) 52
SUB (295) 44
ADD (296) 43
DIV (297) 46
MUL (298) 45


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2, on right: 0
declist (46)
    on left: 3 4, on right: 1 4 16 18
dec (47)
    on left: 5 6 7, on right: 3 4
type (48)
    on left: 8 9 10, on right: 15 18 19 22
iddec (49)
    on left: 11 12, on right: 13 14
idlist (50)
    on left: 13 14, on right: 14 15
vardec (51)
    on left: 15, on right: 5
procdec (52)
    on left: 16 17, on right: 6
funcdec (53)
    on left: 18 19, on right: 7
paramdecs (54)
    on left: 20 21, on right: 16 17 18 19 21
paramdec (55)
    on left: 22, on right: 20 21
paramlist (56)
    on left: 23 24, on right: 22 24
block (57)
    on left: 25 26, on right: 1 2 16 17 18 19 33 34 35 36 37 60 61
stmtlist (58)
    on left: 27 28, on right: 25 28
lvalue (59)
    on left: 29, on right: 32 36 37 58
funcValue (60)
    on left: 30, on right: 18 19
funcCallValue (61)
    on left: 31, on right: 59
stmt (62)
    on left: 32 33 34 35 36 37 38 39 40, on right: 26 27 28
exp (63)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59, on right: 12 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 62 63
caseelement (64)
    on left: 60 61, on right: 38 61
explist (65)
    on left: 62 63, on right: 59 63


State 0

    0 $accept: . program $end

    Program  shift, and go to state 1

    program  go to state 2


State 1

    1 program: Program . IDtoken SEMICOLON declist block SEMICOLON
    2        | Program . IDtoken SEMICOLON block SEMICOLON

    IDtoken  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: Program IDtoken . SEMICOLON declist block SEMICOLON
    2        | Program IDtoken . SEMICOLON block SEMICOLON

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: Program IDtoken SEMICOLON . declist block SEMICOLON
    2        | Program IDtoken SEMICOLON . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    declist        go to state 23
    dec            go to state 24
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 29
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 6

    9 type: Real .

    $default  reduce using rule 9 (type)


State 7

    8 type: Int .

    $default  reduce using rule 8 (type)


State 8

   47 exp: LEFTP . exp RIGHTP

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 35


State 9

   33 stmt: If . exp Then block
   34     | If . exp Then block Else block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 36


State 10

   16 procdec: Procedure . IDtoken LEFTP paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure . IDtoken LEFTP paramdecs RIGHTP block SEMICOLON

    IDtoken  shift, and go to state 37


State 11

   18 funcdec: Function . funcValue LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function . funcValue LEFTP paramdecs RIGHTP COLON type block SEMICOLON

    IDtoken  shift, and go to state 38

    funcValue  go to state 39


State 12

   25 block: Begin . stmtlist End

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    stmtlist       go to state 40
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 41
    exp            go to state 33


State 13

   56 exp: True .

    $default  reduce using rule 56 (exp)


State 14

   57 exp: False .

    $default  reduce using rule 57 (exp)


State 15

   35 stmt: While . exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 42


State 16

   36 stmt: For . lvalue ASSIGNMENT exp To exp Do block
   37     | For . lvalue ASSIGNMENT exp Downto exp Do block

    IDtoken  shift, and go to state 43

    lvalue  go to state 44


State 17

   29 lvalue: IDtoken .
   31 funcCallValue: IDtoken .

    LEFTP     reduce using rule 31 (funcCallValue)
    $default  reduce using rule 29 (lvalue)


State 18

   10 type: Bool .

    $default  reduce using rule 10 (type)


State 19

   54 exp: INTtoken .

    $default  reduce using rule 54 (exp)


State 20

   55 exp: REALtoken .

    $default  reduce using rule 55 (exp)


State 21

   38 stmt: Case . exp caseelement End

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 45


State 22

   39 stmt: Return . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 46


State 23

    1 program: Program IDtoken SEMICOLON declist . block SEMICOLON
    4 declist: declist . dec

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    dec            go to state 47
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 48
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 24

    3 declist: dec .

    $default  reduce using rule 3 (declist)


State 25

   15 vardec: type . idlist SEMICOLON

    IDtoken  shift, and go to state 49

    iddec   go to state 50
    idlist  go to state 51


State 26

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 27

    6 dec: procdec .

    $default  reduce using rule 6 (dec)


State 28

    7 dec: funcdec .

    $default  reduce using rule 7 (dec)


State 29

    2 program: Program IDtoken SEMICOLON block . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 30

   32 stmt: lvalue . ASSIGNMENT exp
   58 exp: lvalue .

    ASSIGNMENT  shift, and go to state 53

    $default  reduce using rule 58 (exp)


State 31

   59 exp: funcCallValue . LEFTP explist RIGHTP

    LEFTP  shift, and go to state 54


State 32

   26 block: stmt .

    $default  reduce using rule 26 (block)


State 33

   40 stmt: exp .
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 40 (stmt)


State 34

   58 exp: lvalue .

    $default  reduce using rule 58 (exp)


State 35

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   47    | LEFTP exp . RIGHTP
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    RIGHTP   shift, and go to state 67
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 36

   33 stmt: If exp . Then block
   34     | If exp . Then block Else block
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    Then     shift, and go to state 68
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 37

   16 procdec: Procedure IDtoken . LEFTP paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken . LEFTP paramdecs RIGHTP block SEMICOLON

    LEFTP  shift, and go to state 69


State 38

   30 funcValue: IDtoken .

    $default  reduce using rule 30 (funcValue)


State 39

   18 funcdec: Function funcValue . LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue . LEFTP paramdecs RIGHTP COLON type block SEMICOLON

    LEFTP  shift, and go to state 70


State 40

   25 block: Begin stmtlist . End
   28 stmtlist: stmtlist . SEMICOLON stmt

    SEMICOLON  shift, and go to state 71
    End        shift, and go to state 72


State 41

   27 stmtlist: stmt .

    $default  reduce using rule 27 (stmtlist)


State 42

   35 stmt: While exp . Do block
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    Do       shift, and go to state 73
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 43

   29 lvalue: IDtoken .

    $default  reduce using rule 29 (lvalue)


State 44

   36 stmt: For lvalue . ASSIGNMENT exp To exp Do block
   37     | For lvalue . ASSIGNMENT exp Downto exp Do block

    ASSIGNMENT  shift, and go to state 74


State 45

   38 stmt: Case exp . caseelement End
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    INTtoken  shift, and go to state 75
    OrElse    shift, and go to state 55
    AndThen   shift, and go to state 56
    NE        shift, and go to state 57
    EQ        shift, and go to state 58
    GE        shift, and go to state 59
    LE        shift, and go to state 60
    GT        shift, and go to state 61
    LT        shift, and go to state 62
    SUB       shift, and go to state 63
    ADD       shift, and go to state 64
    DIV       shift, and go to state 65
    MUL       shift, and go to state 66

    caseelement  go to state 76


State 46

   39 stmt: Return exp .
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 39 (stmt)


State 47

    4 declist: declist dec .

    $default  reduce using rule 4 (declist)


State 48

    1 program: Program IDtoken SEMICOLON declist block . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 49

   11 iddec: IDtoken .
   12      | IDtoken . ASSIGNMENT exp

    ASSIGNMENT  shift, and go to state 78

    $default  reduce using rule 11 (iddec)


State 50

   13 idlist: iddec .

    $default  reduce using rule 13 (idlist)


State 51

   14 idlist: idlist . COMMA iddec
   15 vardec: type idlist . SEMICOLON

    SEMICOLON  shift, and go to state 79
    COMMA      shift, and go to state 80


State 52

    2 program: Program IDtoken SEMICOLON block SEMICOLON .

    $default  reduce using rule 2 (program)


State 53

   32 stmt: lvalue ASSIGNMENT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 81


State 54

   59 exp: funcCallValue LEFTP . explist RIGHTP

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 82
    explist        go to state 83


State 55

   42 exp: exp OrElse . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 84


State 56

   41 exp: exp AndThen . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 85


State 57

   50 exp: exp NE . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 86


State 58

   51 exp: exp EQ . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 87


State 59

   49 exp: exp GE . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 88


State 60

   53 exp: exp LE . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 89


State 61

   48 exp: exp GT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 90


State 62

   52 exp: exp LT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 91


State 63

   44 exp: exp SUB . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 92


State 64

   43 exp: exp ADD . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 93


State 65

   46 exp: exp DIV . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 94


State 66

   45 exp: exp MUL . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 95


State 67

   47 exp: LEFTP exp RIGHTP .

    $default  reduce using rule 47 (exp)


State 68

   33 stmt: If exp Then . block
   34     | If exp Then . block Else block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 96
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 69

   16 procdec: Procedure IDtoken LEFTP . paramdecs RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken LEFTP . paramdecs RIGHTP block SEMICOLON

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type       go to state 97
    paramdecs  go to state 98
    paramdec   go to state 99


State 70

   18 funcdec: Function funcValue LEFTP . paramdecs RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP . paramdecs RIGHTP COLON type block SEMICOLON

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type       go to state 97
    paramdecs  go to state 100
    paramdec   go to state 99


State 71

   28 stmtlist: stmtlist SEMICOLON . stmt

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 101
    exp            go to state 33


State 72

   25 block: Begin stmtlist End .

    $default  reduce using rule 25 (block)


State 73

   35 stmt: While exp Do . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 102
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 74

   36 stmt: For lvalue ASSIGNMENT . exp To exp Do block
   37     | For lvalue ASSIGNMENT . exp Downto exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 103


State 75

   60 caseelement: INTtoken . COLON block SEMICOLON

    COLON  shift, and go to state 104


State 76

   38 stmt: Case exp caseelement . End
   61 caseelement: caseelement . INTtoken COLON block SEMICOLON

    End       shift, and go to state 105
    INTtoken  shift, and go to state 106


State 77

    1 program: Program IDtoken SEMICOLON declist block SEMICOLON .

    $default  reduce using rule 1 (program)


State 78

   12 iddec: IDtoken ASSIGNMENT . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 107


State 79

   15 vardec: type idlist SEMICOLON .

    $default  reduce using rule 15 (vardec)


State 80

   14 idlist: idlist COMMA . iddec

    IDtoken  shift, and go to state 49

    iddec  go to state 108


State 81

   32 stmt: lvalue ASSIGNMENT exp .
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 32 (stmt)


State 82

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp
   62 explist: exp .

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 62 (explist)


State 83

   59 exp: funcCallValue LEFTP explist . RIGHTP
   63 explist: explist . COMMA exp

    RIGHTP  shift, and go to state 109
    COMMA   shift, and go to state 110


State 84

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   42    | exp OrElse exp .
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 42 (exp)


State 85

   41 exp: exp . AndThen exp
   41    | exp AndThen exp .
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    NE   shift, and go to state 57
    EQ   shift, and go to state 58
    GE   shift, and go to state 59
    LE   shift, and go to state 60
    GT   shift, and go to state 61
    LT   shift, and go to state 62
    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 41 (exp)


State 86

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   50    | exp NE exp .
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 50 (exp)


State 87

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   51    | exp EQ exp .
   52    | exp . LT exp
   53    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 51 (exp)


State 88

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   49    | exp GE exp .
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 49 (exp)


State 89

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp
   53    | exp LE exp .

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 53 (exp)


State 90

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   48    | exp GT exp .
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 48 (exp)


State 91

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   52    | exp LT exp .
   53    | exp . LE exp

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64
    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 52 (exp)


State 92

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   44    | exp SUB exp .
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 44 (exp)


State 93

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   43    | exp ADD exp .
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 43 (exp)


State 94

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   46    | exp DIV exp .
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    $default  reduce using rule 46 (exp)


State 95

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   45    | exp MUL exp .
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    $default  reduce using rule 45 (exp)


State 96

   33 stmt: If exp Then block .
   34     | If exp Then block . Else block

    Else  shift, and go to state 111

    $default  reduce using rule 33 (stmt)


State 97

   22 paramdec: type . paramlist

    IDtoken  shift, and go to state 112

    paramlist  go to state 113


State 98

   16 procdec: Procedure IDtoken LEFTP paramdecs . RIGHTP declist block SEMICOLON
   17        | Procedure IDtoken LEFTP paramdecs . RIGHTP block SEMICOLON
   21 paramdecs: paramdecs . SEMICOLON paramdec

    RIGHTP     shift, and go to state 114
    SEMICOLON  shift, and go to state 115


State 99

   20 paramdecs: paramdec .

    $default  reduce using rule 20 (paramdecs)


State 100

   18 funcdec: Function funcValue LEFTP paramdecs . RIGHTP COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs . RIGHTP COLON type block SEMICOLON
   21 paramdecs: paramdecs . SEMICOLON paramdec

    RIGHTP     shift, and go to state 116
    SEMICOLON  shift, and go to state 115


State 101

   28 stmtlist: stmtlist SEMICOLON stmt .

    $default  reduce using rule 28 (stmtlist)


State 102

   35 stmt: While exp Do block .

    $default  reduce using rule 35 (stmt)


State 103

   36 stmt: For lvalue ASSIGNMENT exp . To exp Do block
   37     | For lvalue ASSIGNMENT exp . Downto exp Do block
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    To       shift, and go to state 117
    Downto   shift, and go to state 118
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 104

   60 caseelement: INTtoken COLON . block SEMICOLON

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 119
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 105

   38 stmt: Case exp caseelement End .

    $default  reduce using rule 38 (stmt)


State 106

   61 caseelement: caseelement INTtoken . COLON block SEMICOLON

    COLON  shift, and go to state 120


State 107

   12 iddec: IDtoken ASSIGNMENT exp .
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 12 (iddec)


State 108

   14 idlist: idlist COMMA iddec .

    $default  reduce using rule 14 (idlist)


State 109

   59 exp: funcCallValue LEFTP explist RIGHTP .

    $default  reduce using rule 59 (exp)


State 110

   63 explist: explist COMMA . exp

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 121


State 111

   34 stmt: If exp Then block Else . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 122
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 112

   23 paramlist: IDtoken .

    $default  reduce using rule 23 (paramlist)


State 113

   22 paramdec: type paramlist .
   24 paramlist: paramlist . COMMA IDtoken

    COMMA  shift, and go to state 123

    $default  reduce using rule 22 (paramdec)


State 114

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP . declist block SEMICOLON
   17        | Procedure IDtoken LEFTP paramdecs RIGHTP . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    declist        go to state 124
    dec            go to state 24
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 125
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 115

   21 paramdecs: paramdecs SEMICOLON . paramdec

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type      go to state 97
    paramdec  go to state 126


State 116

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP . COLON type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP . COLON type block SEMICOLON

    COLON  shift, and go to state 127


State 117

   36 stmt: For lvalue ASSIGNMENT exp To . exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 128


State 118

   37 stmt: For lvalue ASSIGNMENT exp Downto . exp Do block

    LEFTP      shift, and go to state 8
    True       shift, and go to state 13
    False      shift, and go to state 14
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20

    lvalue         go to state 34
    funcCallValue  go to state 31
    exp            go to state 129


State 119

   60 caseelement: INTtoken COLON block . SEMICOLON

    SEMICOLON  shift, and go to state 130


State 120

   61 caseelement: caseelement INTtoken COLON . block SEMICOLON

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 131
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 121

   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp
   63 explist: explist COMMA exp .

    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66

    $default  reduce using rule 63 (explist)


State 122

   34 stmt: If exp Then block Else block .

    $default  reduce using rule 34 (stmt)


State 123

   24 paramlist: paramlist COMMA . IDtoken

    IDtoken  shift, and go to state 132


State 124

    4 declist: declist . dec
   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    dec            go to state 47
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 133
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 125

   17 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP block . SEMICOLON

    SEMICOLON  shift, and go to state 134


State 126

   21 paramdecs: paramdecs SEMICOLON paramdec .

    $default  reduce using rule 21 (paramdecs)


State 127

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON . type declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP COLON . type block SEMICOLON

    Real  shift, and go to state 6
    Int   shift, and go to state 7
    Bool  shift, and go to state 18

    type  go to state 135


State 128

   36 stmt: For lvalue ASSIGNMENT exp To exp . Do block
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    Do       shift, and go to state 136
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 129

   37 stmt: For lvalue ASSIGNMENT exp Downto exp . Do block
   41 exp: exp . AndThen exp
   42    | exp . OrElse exp
   43    | exp . ADD exp
   44    | exp . SUB exp
   45    | exp . MUL exp
   46    | exp . DIV exp
   48    | exp . GT exp
   49    | exp . GE exp
   50    | exp . NE exp
   51    | exp . EQ exp
   52    | exp . LT exp
   53    | exp . LE exp

    Do       shift, and go to state 137
    OrElse   shift, and go to state 55
    AndThen  shift, and go to state 56
    NE       shift, and go to state 57
    EQ       shift, and go to state 58
    GE       shift, and go to state 59
    LE       shift, and go to state 60
    GT       shift, and go to state 61
    LT       shift, and go to state 62
    SUB      shift, and go to state 63
    ADD      shift, and go to state 64
    DIV      shift, and go to state 65
    MUL      shift, and go to state 66


State 130

   60 caseelement: INTtoken COLON block SEMICOLON .

    $default  reduce using rule 60 (caseelement)


State 131

   61 caseelement: caseelement INTtoken COLON block . SEMICOLON

    SEMICOLON  shift, and go to state 138


State 132

   24 paramlist: paramlist COMMA IDtoken .

    $default  reduce using rule 24 (paramlist)


State 133

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist block . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 134

   17 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP block SEMICOLON .

    $default  reduce using rule 17 (procdec)


State 135

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type . declist block SEMICOLON
   19        | Function funcValue LEFTP paramdecs RIGHTP COLON type . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    declist        go to state 140
    dec            go to state 24
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 141
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 136

   36 stmt: For lvalue ASSIGNMENT exp To exp Do . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 142
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 137

   37 stmt: For lvalue ASSIGNMENT exp Downto exp Do . block

    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    block          go to state 143
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 138

   61 caseelement: caseelement INTtoken COLON block SEMICOLON .

    $default  reduce using rule 61 (caseelement)


State 139

   16 procdec: Procedure IDtoken LEFTP paramdecs RIGHTP declist block SEMICOLON .

    $default  reduce using rule 16 (procdec)


State 140

    4 declist: declist . dec
   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist . block SEMICOLON

    Real       shift, and go to state 6
    Int        shift, and go to state 7
    LEFTP      shift, and go to state 8
    If         shift, and go to state 9
    Procedure  shift, and go to state 10
    Function   shift, and go to state 11
    Begin      shift, and go to state 12
    True       shift, and go to state 13
    False      shift, and go to state 14
    While      shift, and go to state 15
    For        shift, and go to state 16
    IDtoken    shift, and go to state 17
    Bool       shift, and go to state 18
    INTtoken   shift, and go to state 19
    REALtoken  shift, and go to state 20
    Case       shift, and go to state 21
    Return     shift, and go to state 22

    dec            go to state 47
    type           go to state 25
    vardec         go to state 26
    procdec        go to state 27
    funcdec        go to state 28
    block          go to state 144
    lvalue         go to state 30
    funcCallValue  go to state 31
    stmt           go to state 32
    exp            go to state 33


State 141

   19 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type block . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 142

   36 stmt: For lvalue ASSIGNMENT exp To exp Do block .

    $default  reduce using rule 36 (stmt)


State 143

   37 stmt: For lvalue ASSIGNMENT exp Downto exp Do block .

    $default  reduce using rule 37 (stmt)


State 144

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist block . SEMICOLON

    SEMICOLON  shift, and go to state 146


State 145

   19 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type block SEMICOLON .

    $default  reduce using rule 19 (funcdec)


State 146

   18 funcdec: Function funcValue LEFTP paramdecs RIGHTP COLON type declist block SEMICOLON .

    $default  reduce using rule 18 (funcdec)
